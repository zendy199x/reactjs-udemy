{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/React-Udemy/Section 3 - Understanding the Base Features & Syntax\\u2026/Assignment 1 - Time to Practice - The Base Syntax/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport UserInput from \"./UserInput/UserInput\";\nimport UserOutput from \"./UserOutput/UserOutput\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"supermax\"\n    };\n\n    this.usernameChangedHandler = () => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Create TWO new components: UserInput and UserOutput\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"UserInput should hold an input element, UserOutput two paragraphs\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Output multiple UserOutput components in the App component (any paragraph texts of your choice)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Pass a username (of your choice) to UserOutput via props and display it there\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Add state to the App component (=> the username) and pass the username to the UserOutput component\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Add a method to manipulate the state (=> an event-handler method)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Pass the event-handler method reference to the UserInput component and bind it to the input-change event\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Ensure that the new input entered by the user overwrites the old username passed to UserOutput\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Add two-way-binding to your input (in UserInput) to also display the starting username\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\")), React.createElement(UserInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      userName: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      userName: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      userName: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zendy/Coder/React-Udemy/Section 3 - Understanding the Base Features & Syntaxâ€¦/Assignment 1 - Time to Practice - The Base Syntax/src/App.js"],"names":["React","Component","UserInput","UserOutput","App","state","username","usernameChangedHandler","setState","event","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADgB;;AAAA,SAKxBC,sBALwB,GAKC,MAAM;AAC3B,WAAKC,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAEG,KAAK,CAACC,MAAN,CAAaC;AAAxB,OAAd;AACH,KAPuB;AAAA;;AAS5BC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGALA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFATA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GAbA,EAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAjBA,EAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHApBA,EAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAxBA,EA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGA5BA,EAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAhCA,CADJ,EAsCI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCJ,EAuCI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCJ,EAwCI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCJ,EAyCI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCJ,CADJ;AA6CC;;AAvDuB;;AA0D5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport UserInput from \"./UserInput/UserInput\";\nimport UserOutput from \"./UserOutput/UserOutput\";\n\nclass App extends Component {\n    state = {\n        username: \"supermax\"\n    };\n\n    usernameChangedHandler = () => {\n        this.setState({username: event.target.value})\n    }\n\nrender() {\n    return (\n        <div className=\"App\">\n            <ol>\n            <li>Create TWO new components: UserInput and UserOutput</li>\n            <li>\n                UserInput should hold an input element, UserOutput two paragraphs\n            </li>\n            <li>\n                Output multiple UserOutput components in the App component (any\n                paragraph texts of your choice)\n            </li>\n            <li>\n                Pass a username (of your choice) to UserOutput via props and display\n                it there\n            </li>\n            <li>\n                Add state to the App component (=> the username) and pass the\n                username to the UserOutput component\n            </li>\n            <li>\n                Add a method to manipulate the state (=> an event-handler method)\n            </li>\n            <li>\n                Pass the event-handler method reference to the UserInput component\n                and bind it to the input-change event\n            </li>\n            <li>\n                Ensure that the new input entered by the user overwrites the old\n                username passed to UserOutput\n            </li>\n            <li>\n                Add two-way-binding to your input (in UserInput) to also display the\n                starting username\n            </li>\n            <li>\n                Add styling of your choice to your components/ elements in the\n                components - both with inline styles and stylesheets\n            </li>\n            </ol>\n            <UserInput />\n            <UserOutput userName={this.state.username} />\n            <UserOutput userName={this.state.username} />\n            <UserOutput userName={this.state.username} />\n        </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}