{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/React-Udemy/Section 3 - Understanding the Base Features & Syntax\\u2026/Assignment 1 - Time to Practice - The Base Syntax/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nclass App extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Create TWO new components: UserInput and UserOutput\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"UserInput should hold an input element, UserOutput two paragraphs\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Output multiple UserOutput components in the App component (any paragraph texts of your choice)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Pass a username (of your choice) to UserOutput via props and display it there\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Add state to the App component (=> the username) and pass the username to the UserOutput component\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Add a method to manipulate the state (=> an event-handler method)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Pass the event-handler method reference to the UserInput component and bind it to the input-change event\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Ensure that the new input entered by the user overwrites the old username passed to UserOutput\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Add two-way-binding to your input (in UserInput) to also display the starting username\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\")), React.createElement(UserInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      userName: \"Max\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      userName: \"Manu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zendy/Coder/React-Udemy/Section 3 - Understanding the Base Features & Syntaxâ€¦/Assignment 1 - Time to Practice - The Base Syntax/src/App.js"],"names":["React","Component","UserInput","UserOutput","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAVF,CADF,EAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF;AAoBD;;AAtByB;;AAyB5B,eAAeD,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create TWO new components: UserInput and UserOutput</li>\n          <li>UserInput should hold an input element, UserOutput two paragraphs</li>\n          <li>Output multiple UserOutput components in the App component (any paragraph texts of your choice)</li>\n          <li>Pass a username (of your choice) to UserOutput via props and display it there</li>\n          <li>Add state to the App component (=> the username) and pass the username to the UserOutput component</li>\n          <li>Add a method to manipulate the state (=> an event-handler method)</li>\n          <li>Pass the event-handler method reference to the UserInput component and bind it to the input-change event</li>\n          <li>Ensure that the new input entered by the user overwrites the old username passed to UserOutput</li>\n          <li>Add two-way-binding to your input (in UserInput) to also display the starting username</li>\n          <li>Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets</li>\n        </ol>\n        <UserInput/>\n        <UserOutput userName='Max'/>\n        <UserOutput userName='Manu'/>\n        <UserOutput/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}