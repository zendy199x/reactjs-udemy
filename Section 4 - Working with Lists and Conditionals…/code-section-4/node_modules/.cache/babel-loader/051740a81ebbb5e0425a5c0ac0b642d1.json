{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/reactjs-udemy/Section 4 - Working with Lists and Conditionals\\u2026/code-section-4/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: 'Max',\n        age: 28\n      }, {\n        name: 'Manu',\n        age: 29\n      }, {\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.switchNameHandler = newName => {\n      // console.log('Was clicked!');\n      // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n      this.setState({\n        persons: [{\n          name: newName,\n          age: 28\n        }, {\n          name: 'Manu',\n          age: 29\n        }, {\n          name: 'Stephanie',\n          age: 27\n        }]\n      });\n    };\n\n    this.nameChangeHandler = event => {\n      this.setState({\n        persons: [{\n          name: 'Max',\n          age: 28\n        }, {\n          name: event.target.value,\n          age: 29\n        }, {\n          name: 'Stephanie',\n          age: 27\n        }]\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      boder: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.persons.map(person => {\n        re;\n      }), React.createElement(Person, {\n        name: this.state.persons[0].name,\n        age: this.state.persons[0].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Person, {\n        name: this.state.persons[1].name,\n        age: this.state.persons[1].age,\n        click: this.switchNameHandler.bind(this, 'Max!'),\n        changed: this.switchNameHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"My Hobbies: Racing\"), React.createElement(Person, {\n        name: this.state.persons[2].name,\n        age: this.state.persons[2].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"This is really working!\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Toggle Persons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zendy/Coder/reactjs-udemy/Section 4 - Working with Lists and Conditionalsâ€¦/code-section-4/src/App.js"],"names":["React","Component","Person","App","state","persons","name","age","otherState","showPersons","switchNameHandler","newName","setState","nameChangeHandler","event","target","value","togglePersonsHandler","doesShow","render","style","backgroundColor","font","boder","padding","cursor","map","person","re","bind"],"mappings":"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","sourcesContent":["    import React, { Component } from 'react';\n    import './App.css';\n    import Person from './Person/Person';\n\nclass App extends Component {\n    state = {\n        persons: [\n        { name: 'Max', age: 28 },\n        { name: 'Manu', age: 29 },\n        { name: 'Stephanie', age: 26 }\n        ],\n        otherState: 'some other value',\n        showPersons: false\n    }\n\n    switchNameHandler = (newName) => {\n        // console.log('Was clicked!');\n        // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n        this.setState({\n            persons: [\n                { name: newName, age: 28 },\n                { name: 'Manu', age: 29 },\n                { name: 'Stephanie', age: 27 }\n            ]\n        })\n    }\n\n    nameChangeHandler = (event) => {\n        this.setState({\n            persons: [\n                { name: 'Max', age: 28 },\n                { name: event.target.value, age: 29 },\n                { name: 'Stephanie', age: 27 }\n            ]\n        })\n    }\n\n    togglePersonsHandler = () => {\n        const doesShow = this.state.showPersons;\n        this.setState({showPersons: !doesShow})\n    }\n\n    render() {\n        const style = {\n            backgroundColor: 'white',\n            font: 'inherit',\n            boder: '1px solid blue',\n            padding: '8px',\n            cursor: 'pointer'\n        }\n\n        let persons = null;\n\n        if (this.state.showPersons) {\n            persons = (\n                <div>\n                {this.state.persons.map(person => {\n                    re \n                })}\n                    <Person\n                        name={this.state.persons[0].name}\n                        age={this.state.persons[0].age}\n                    />\n                    <Person\n                        name={this.state.persons[1].name}\n                        age={this.state.persons[1].age}\n                        click={this.switchNameHandler.bind(this, 'Max!')}\n                        changed={this.switchNameHandler}\n                    >\n                    My Hobbies: Racing\n                    </Person>\n                    <Person\n                        name={this.state.persons[2].name}\n                        age={this.state.persons[2].age}\n                    />\n                </div>\n            )\n        }\n\n        return (\n        <div className=\"App\">\n            <h1>Hi, I'm a React App</h1>\n            <p>This is really working!</p>\n            <button\n                style={style}\n                onClick={this.togglePersonsHandler}>Toggle Persons</button>\n            {persons}\n            </div>\n        );\n        // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n    }\n}\n\n    export default App;"]},"metadata":{},"sourceType":"module"}